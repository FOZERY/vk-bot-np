import { Context } from 'vk-io';
import { SceneContext } from './contexts';
export type Middleware<T> = (context: T, next: Function) => unknown;
export interface ISessionContext {
    [key: string]: any;
}
export interface IContext<S extends Record<string, unknown> = Record<string, any>> extends Context {
    /**
     * Scene control context
     */
    scene: SceneContext<S>;
    [key: string]: any;
}
